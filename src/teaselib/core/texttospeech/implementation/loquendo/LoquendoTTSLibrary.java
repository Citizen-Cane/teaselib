package teaselib.core.texttospeech.implementation.loquendo;

import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.SizeT;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;

/**
 * Wrapper for library <b>LoquendoTTS</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or
 * <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("LoquendoTTS")
@Runtime(CRuntime.class)
public class LoquendoTTSLibrary {
    static {
        BridJ.register();
    }

    /**
     * BEGIN: C API DECLARATIONS<br>
     * Original signature :
     * <code>tts_API_DEFINITION ttsRead(ttsHandleType, const void*, ttsBoolType, ttsBoolType, size_t*)</code><br>
     * <i>native declaration : line 30</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsRead(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<?> Input, LoquendoTTSLibrary.ttsBoolType bAsync, LoquendoTTSLibrary.ttsBoolType bFromFile,
            Pointer<SizeT> phPromptId);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsReadSlice(ttsHandleType, const void*, ttsBoolType, size_t*)</code><br>
     * <i>native declaration : line 39</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsReadSlice(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<?> Input, LoquendoTTSLibrary.ttsBoolType bFromFile, Pointer<SizeT> phPromptId);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsReadNextSlice(ttsHandleType, ttsBoolType*)</code><br>
     * <i>native declaration : line 47</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsReadNextSlice(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<LoquendoTTSLibrary.ttsBoolType> pbEnd);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsPause(ttsHandleType)</code><br>
     * <i>native declaration : line 53</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsPause(LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsResume(ttsHandleType)</code><br>
     * <i>native declaration : line 57</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsResume(LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSkip(ttsHandleType, ttsSkipType, signed int)</code><br>
     * <i>native declaration : line 61</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSkip(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsSkipType Type, int nUtterances);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsWaitForEndOfSpeech(ttsHandleType, unsigned int, ttsBoolType*)</code><br>
     * <i>native declaration : line 67</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsWaitForEndOfSpeech(
            LoquendoTTSLibrary.ttsHandleType hReader, int TimeOutMsec,
            Pointer<LoquendoTTSLibrary.ttsBoolType> bSignaled);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsStop(ttsHandleType)</code><br>
     * <i>native declaration : line 73</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsStop(LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsReset(ttsHandleType)</code><br>
     * <i>native declaration : line 77</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsReset(LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsAudioFreeSpace(ttsHandleType, ttsBoolType*)</code><br>
     * <i>native declaration : line 81</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsAudioFreeSpace(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<LoquendoTTSLibrary.ttsBoolType> bFreeSpace);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsNewLanguage(ttsHandleType*, ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 86</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewLanguage(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phLanguage, LoquendoTTSLibrary.ttsHandleType hSession,
            Pointer<Byte> Language);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetLanguage(ttsHandleType, ttsHandleType)</code><br>
     * <i>native declaration : line 92</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetLanguage(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsHandleType hLanguage);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteLanguage(ttsHandleType)</code><br>
     * <i>native declaration : line 97</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteLanguage(
            LoquendoTTSLibrary.ttsHandleType hLanguage);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsNewStyle(ttsHandleType*, ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 101</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewStyle(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phStyle, LoquendoTTSLibrary.ttsHandleType hSession,
            Pointer<Byte> StyleName);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteStyle(ttsHandleType)</code><br>
     * <i>native declaration : line 107</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteStyle(LoquendoTTSLibrary.ttsHandleType hStyle);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetStyle(ttsHandleType, ttsHandleType)</code><br>
     * <i>native declaration : line 111</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetStyle(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsHandleType hStyle);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsOpenLexicon(ttsHandleType*, ttsHandleType, unsigned int, ttsBoolType, const char*, ttsBoolType)</code><br>
     * <i>native declaration : line 116</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsOpenLexicon(
            Pointer<LoquendoTTSLibrary.ttsHandleType> hLexicon, LoquendoTTSLibrary.ttsHandleType hReader, int nLex,
            LoquendoTTSLibrary.ttsBoolType bReadOnly, Pointer<Byte> FileName, LoquendoTTSLibrary.ttsBoolType bActivate);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsActivateLexicon(ttsHandleType, ttsBoolType)</code><br>
     * <i>native declaration : line 125</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsActivateLexicon(
            LoquendoTTSLibrary.ttsHandleType hLexicon, LoquendoTTSLibrary.ttsBoolType bActive);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsCloseLexicon(ttsHandleType)</code><br>
     * <i>native declaration : line 130</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsCloseLexicon(
            LoquendoTTSLibrary.ttsHandleType hLexicon);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsFindLexiconEntry(ttsHandleType, const char*, ttsInfoStringType, const char*)</code><br>
     * <i>native declaration : line 134</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsFindLexiconEntry(
            LoquendoTTSLibrary.ttsHandleType hLexicon, Pointer<Byte> FindExpression,
            LoquendoTTSLibrary.ttsInfoStringType ReplaceExpression, Pointer<Byte> LanguageID);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsAddLexiconEntry(ttsHandleType, const char*, const char*, const char*)</code><br>
     * <i>native declaration : line 141</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsAddLexiconEntry(
            LoquendoTTSLibrary.ttsHandleType hLexicon, Pointer<Byte> FindExpression, Pointer<Byte> ReplaceExpression,
            Pointer<Byte> LanguageID);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsRemoveLexiconEntry(ttsHandleType, const char*, const char*)</code><br>
     * <i>native declaration : line 148</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsRemoveLexiconEntry(
            LoquendoTTSLibrary.ttsHandleType hLexicon, Pointer<Byte> FindExpression, Pointer<Byte> LanguageID);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsImportLexicon(ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 154</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsImportLexicon(
            LoquendoTTSLibrary.ttsHandleType hLexicon, Pointer<Byte> filename);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsExportLexicon(ttsHandleType, const char*, const char*)</code><br>
     * <i>native declaration : line 159</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsExportLexicon(
            LoquendoTTSLibrary.ttsHandleType hLexicon, Pointer<Byte> filename, Pointer<Byte> reserved);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsEnumLexiconEntryFirst(ttsHandleType*, ttsHandleType, const char**, const char*)</code><br>
     * <i>native declaration : line 165</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumLexiconEntryFirst(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phEnum, LoquendoTTSLibrary.ttsHandleType hLexicon,
            Pointer<Pointer<Byte>> pFindExpression, Pointer<Byte> LanguageID);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsEnumLexiconEntryNext(ttsHandleType, const char**)</code><br>
     * <i>native declaration : line 172</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumLexiconEntryNext(
            LoquendoTTSLibrary.ttsHandleType hEnum, Pointer<Pointer<Byte>> pFindExpression);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetPitch(ttsHandleType, int)</code><br>
     * <i>native declaration : line 177</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetPitch(LoquendoTTSLibrary.ttsHandleType hReader,
            int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetPitch(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 182</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetPitch(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetSpeed(ttsHandleType, int)</code><br>
     * <i>native declaration : line 187</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetSpeed(LoquendoTTSLibrary.ttsHandleType hReader,
            int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetSpeed(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 192</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetSpeed(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetVolume(ttsHandleType, int)</code><br>
     * <i>native declaration : line 197</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetVolume(LoquendoTTSLibrary.ttsHandleType hReader,
            int volume);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetVolume(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 202</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetVolume(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> volume);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetTimbre(ttsHandleType, int)</code><br>
     * <i>native declaration : line 207</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetTimbre(LoquendoTTSLibrary.ttsHandleType hReader,
            int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetTimbre(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 212</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetTimbre(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetAbsolutePitch(ttsHandleType, int)</code><br>
     * <i>native declaration : line 217</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetAbsolutePitch(
            LoquendoTTSLibrary.ttsHandleType hReader, int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetAbsolutePitch(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 222</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetAbsolutePitch(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetAbsoluteSpeed(ttsHandleType, int)</code><br>
     * <i>native declaration : line 227</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetAbsoluteSpeed(
            LoquendoTTSLibrary.ttsHandleType hReader, int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetAbsoluteSpeed(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 232</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetAbsoluteSpeed(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetAbsoluteVolume(ttsHandleType, int)</code><br>
     * <i>native declaration : line 237</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetAbsoluteVolume(
            LoquendoTTSLibrary.ttsHandleType hReader, int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetAbsoluteVolume(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 242</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetAbsoluteVolume(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetReverb(ttsHandleType, int, int)</code><br>
     * <i>native declaration : line 247</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetReverb(LoquendoTTSLibrary.ttsHandleType hReader,
            int gain, int delay);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetReverb(ttsHandleType, int*, int*)</code><br>
     * <i>native declaration : line 253</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetReverb(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> gain, Pointer<Integer> delay);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetBalance(ttsHandleType, int)</code><br>
     * <i>native declaration : line 259</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetBalance(LoquendoTTSLibrary.ttsHandleType hReader,
            int value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetBalance(ttsHandleType, int*)</code><br>
     * <i>native declaration : line 264</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetBalance(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsAddParametricEQ(ttsHandleType, float, float, float)</code><br>
     * <i>native declaration : line 269</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsAddParametricEQ(
            LoquendoTTSLibrary.ttsHandleType hReader, float freq, float gain, float Q);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsResetParametricEQ(ttsHandleType)</code><br>
     * <i>native declaration : line 276</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsResetParametricEQ(
            LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSetGraphicEQPreset(ttsHandleType, ttsGraphicEQPresetType)</code><br>
     * <i>native declaration : line 280</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetGraphicEQPreset(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsGraphicEQPresetType Preset);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSetGraphicEQBand(ttsHandleType, ttsGraphicEQBandType, float)</code><br>
     * <i>native declaration : line 285</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetGraphicEQBand(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsGraphicEQBandType Band, float Gain);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsGetGraphicEQBand(ttsHandleType, ttsGraphicEQBandType, float*)</code><br>
     * <i>native declaration : line 291</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetGraphicEQBand(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsGraphicEQBandType Band,
            Pointer<Float> Gain);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsResetGraphicEQ(ttsHandleType)</code><br>
     * <i>native declaration : line 297</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsResetGraphicEQ(
            LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsNewVoice(ttsHandleType*, ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 301</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewVoice(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phVoice, LoquendoTTSLibrary.ttsHandleType hSession,
            Pointer<Byte> Speaker);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteVoice(ttsHandleType)</code><br>
     * <i>native declaration : line 307</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteVoice(LoquendoTTSLibrary.ttsHandleType hVoice);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetVoice(ttsHandleType, ttsHandleType)</code><br>
     * <i>native declaration : line 311</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetVoice(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsHandleType hVoice);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsNewLexicon(ttsHandleType*, ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 316</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewLexicon(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phLexicon, LoquendoTTSLibrary.ttsHandleType hSession,
            Pointer<Byte> LexiconName);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteLexicon(ttsHandleType)</code><br>
     * <i>native declaration : line 322</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteLexicon(
            LoquendoTTSLibrary.ttsHandleType hLexicon);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetLexicon(ttsHandleType, ttsHandleType, size_t)</code><br>
     * <i>native declaration : line 326</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetLexicon(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsHandleType hLexicon, @Ptr long LexiconIndex);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsLoadPersona(ttsHandleType, const char*, const char*, const char*)</code><br>
     * <i>native declaration : line 332</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsLoadPersona(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Byte> szVoice, Pointer<Byte> szLanguage, Pointer<Byte> szStyle);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsLoadPersonaFromFile(ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 339</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsLoadPersonaFromFile(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Byte> szReader);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSetCallback(ttsHandleType, void*, void*, ttsCallbackType)</code><br>
     * <i>native declaration : line 344</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetCallback(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<?> pCallback, Pointer<?> pUser, LoquendoTTSLibrary.ttsCallbackType Type);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetVersionInfo(ttsInfoStringType)</code><br>
     * <i>native declaration : line 351</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetVersionInfo(
            LoquendoTTSLibrary.ttsInfoStringType StrVer);

    /**
     * Original signature : <code>tts_API_DEFINITION_P ttsGetErrorMessage(ttsResultType)</code><br>
     * <i>native declaration : line 355</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION_P ttsGetErrorMessage(
            LoquendoTTSLibrary.ttsResultType ErrNo);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsTestPersona(ttsHandleType, const char*, const char*, const char*)</code><br>
     * <i>native declaration : line 359</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsTestPersona(LoquendoTTSLibrary.ttsHandleType hSession,
            Pointer<Byte> Speaker, Pointer<Byte> Language, Pointer<Byte> Style);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsInject(ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 366</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsInject(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Byte> command);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsPhoneticTranscription(ttsHandleType, const void*, void*, const size_t, size_t*)</code><br>
     * <i>native declaration : line 371</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsPhoneticTranscription(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<?> text, Pointer<?> TranscriptionBuffer,
            @Ptr long BufferLen, Pointer<SizeT> TranscriptionLen);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSetAudio(ttsHandleType, const char*, const char*, unsigned int, ttsAudioEncodingType, ttsAudioSampleType, const void*)</code><br>
     * <i>native declaration : line 379</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetAudio(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Byte> AudioDestName, Pointer<Byte> AudioDeviceName, int SampleRate,
            LoquendoTTSLibrary.ttsAudioEncodingType coding, LoquendoTTSLibrary.ttsAudioSampleType nChannels,
            Pointer<?> pUser);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetRobotsList(ttsInfoStringType)</code><br>
     * <i>native declaration : line 389</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetRobotsList(
            LoquendoTTSLibrary.ttsInfoStringType list);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsQuery(ttsHandleType, ttsQueryType, const char*, const char*, char*, size_t, ttsBoolType, ttsBoolType)</code><br>
     * <i>native declaration : line 391</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsQuery(LoquendoTTSLibrary.ttsHandleType hSession,
            LoquendoTTSLibrary.ttsQueryType uObject, Pointer<Byte> sDataToRetrieve, Pointer<Byte> sFilter,
            Pointer<Byte> sResultBuffer, @Ptr long uResultBufferSize, LoquendoTTSLibrary.ttsBoolType bLoadedOnly,
            LoquendoTTSLibrary.ttsBoolType bRescanFileSystem);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsQueryAttribute(ttsHandleType, ttsQueryType, const char*, const char*, char*, size_t)</code><br>
     * <i>native declaration : line 402</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsQueryAttribute(
            LoquendoTTSLibrary.ttsHandleType hSession, LoquendoTTSLibrary.ttsQueryType uObject,
            Pointer<Byte> sAttribute, Pointer<Byte> sObjectId, Pointer<Byte> sResultBuffer,
            @Ptr long uResultBufferSize);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsEnumFirst(ttsHandleType*, ttsHandleType, ttsQueryType, const char*, char**)</code><br>
     * <i>native declaration : line 411</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumFirst(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phEnum, LoquendoTTSLibrary.ttsHandleType hSession,
            LoquendoTTSLibrary.ttsQueryType uObject, Pointer<Byte> sFilter, Pointer<Pointer<Byte>> pResult);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsEnumNext(ttsHandleType, char**)</code><br>
     * <i>native declaration : line 419</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumNext(LoquendoTTSLibrary.ttsHandleType hEnum,
            Pointer<Pointer<Byte>> pResult);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsEnumClose(ttsHandleType)</code><br>
     * <i>native declaration : line 424</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumClose(LoquendoTTSLibrary.ttsHandleType hEnum);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsLocateSpeechAtomInventory(ttsHandleType, ttsHandleType*, const char*)</code><br>
     * <i>native declaration : line 428</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsLocateSpeechAtomInventory(
            LoquendoTTSLibrary.ttsHandleType hVoice, Pointer<LoquendoTTSLibrary.ttsHandleType> hInventory,
            Pointer<Byte> path);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsGetSpeechAtom(ttsHandleType*, ttsHandleType, const char**, const void**)</code><br>
     * <i>native declaration : line 434</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetSpeechAtom(
            Pointer<LoquendoTTSLibrary.ttsHandleType> hNode, LoquendoTTSLibrary.ttsHandleType hParent,
            Pointer<Pointer<Byte>> name, Pointer<Pointer<?>> info);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsValidateXML(ttsHandleType, const void*, ttsBoolType)</code><br>
     * <i>native declaration : line 441</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsValidateXML(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<?> Input, LoquendoTTSLibrary.ttsBoolType bFromFile);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSSMLConvert(ttsHandleType, const void*, char**, ttsBoolType)</code><br>
     * <i>native declaration : line 447</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSSMLConvert(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<?> Input, Pointer<Pointer<Byte>> Output, LoquendoTTSLibrary.ttsBoolType bFromFile);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsNewSession(ttsHandleType*, const char*)</code><br>
     * <i>native declaration : line 454</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewSession(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phSession, Pointer<Byte> IniFile);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteSession(ttsHandleType)</code><br>
     * <i>native declaration : line 459</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteSession(
            LoquendoTTSLibrary.ttsHandleType hSession);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsNewReader(ttsHandleType*, ttsHandleType)</code><br>
     * <i>native declaration : line 463</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsNewReader(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phReader, LoquendoTTSLibrary.ttsHandleType hSession);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteReader(ttsHandleType)</code><br>
     * <i>native declaration : line 468</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteReader(
            LoquendoTTSLibrary.ttsHandleType hReader);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsLanguageGuess(ttsHandleType, const void*, ttsInfoStringType, ttsBoolType)</code><br>
     * <i>native declaration : line 472</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsLanguageGuess(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<?> Input,
            LoquendoTTSLibrary.ttsInfoStringType GuessedLanguage, LoquendoTTSLibrary.ttsBoolType bFromFile);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetParam(ttsHandleType, const char*, const char*)</code><br>
     * <i>native declaration : line 479</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetParam(LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Byte> sName, Pointer<Byte> sValue);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsGetParam(ttsHandleType, const char*, ttsInfoStringType)</code><br>
     * <i>native declaration : line 485</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetParam(LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Byte> sName, LoquendoTTSLibrary.ttsInfoStringType sValue);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetTextEncoding(ttsHandleType, ttsTextEncodingType)</code><br>
     * <i>native declaration : line 491</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetTextEncoding(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsTextEncodingType encoding);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetTextEncoding(ttsHandleType, ttsTextEncodingType*)</code><br>
     * <i>native declaration : line 496</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetTextEncoding(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<LoquendoTTSLibrary.ttsTextEncodingType> encoding);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSetTextFormat(ttsHandleType, ttsTextFormatType)</code><br>
     * <i>native declaration : line 501</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetTextFormat(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsTextFormatType format);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetTextFormat(ttsHandleType, ttsTextFormatType*)</code><br>
     * <i>native declaration : line 506</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetTextFormat(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<LoquendoTTSLibrary.ttsTextFormatType> format);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsSaveCF(ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 511</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSaveCF(LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Byte> sFileName);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsClone(ttsHandleType*, ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 516</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsClone(
            Pointer<LoquendoTTSLibrary.ttsHandleType> hNewObject, LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Byte> sNewId);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSaveConfigurationParam(const char*, const char*, const char*)</code><br>
     * <i>native declaration : line 522</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSaveConfigurationParam(Pointer<Byte> area,
            Pointer<Byte> key, Pointer<Byte> value);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsLoadConfigurationParam(const char*, const char*, ttsInfoStringType)</code><br>
     * <i>native declaration : line 528</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsLoadConfigurationParam(Pointer<Byte> area,
            Pointer<Byte> key, LoquendoTTSLibrary.ttsInfoStringType value);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsDeleteConfiguration(const char*)</code><br>
     * <i>native declaration : line 534</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsDeleteConfiguration(Pointer<Byte> area);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsGetPhonemeInfo(ttsHandleType, const char**, unsigned int*)</code><br>
     * <i>native declaration : line 538</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetPhonemeInfo(
            LoquendoTTSLibrary.ttsHandleType hObject, Pointer<Pointer<Byte>> pLabel, Pointer<Integer> pDuration);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsGetPCM(ttsHandleType, const void**, size_t*, ttsBoolType*)</code><br>
     * <i>native declaration : line 544</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetPCM(LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Pointer<?>> pBuffer, Pointer<SizeT> pnSamples, Pointer<LoquendoTTSLibrary.ttsBoolType> bComplete);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsGetTag(ttsHandleType, const char**)</code><br>
     * <i>native declaration : line 551</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsGetTag(LoquendoTTSLibrary.ttsHandleType hObject,
            Pointer<Pointer<Byte>> tag);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsCheckPhoneticTranscription(ttsHandleType, const char*)</code><br>
     * <i>native declaration : line 556</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsCheckPhoneticTranscription(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Byte> PhoneticString);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsClaimLicense(ttsHandleType, unsigned int*)</code><br>
     * <i>native declaration : line 561</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsClaimLicense(LoquendoTTSLibrary.ttsHandleType hReader,
            Pointer<Integer> time2wait);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsUnclaimLicense(ttsHandleType, unsigned int*)</code><br>
     * <i>native declaration : line 566</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsUnclaimLicense(
            LoquendoTTSLibrary.ttsHandleType hReader, Pointer<Integer> time2wait);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsEnableEvent(ttsHandleType, ttsEventType, ttsBoolType)</code><br>
     * <i>native declaration : line 571</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnableEvent(LoquendoTTSLibrary.ttsHandleType hReader,
            LoquendoTTSLibrary.ttsEventType evt, LoquendoTTSLibrary.ttsBoolType bEnabled);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsSetURLCallback(ttsHandleType, ttsURLCallbackType, void*)</code><br>
     * <i>native declaration : line 577</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsSetURLCallback(
            LoquendoTTSLibrary.ttsHandleType hReader, LoquendoTTSLibrary.ttsURLCallbackType pfnCallback,
            Pointer<?> pUser);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsEnumConfigurationParameterFirst(ttsHandleType*, ttsBoolType, const char**, const char**)</code><br>
     * <i>native declaration : line 583</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumConfigurationParameterFirst(
            Pointer<LoquendoTTSLibrary.ttsHandleType> phEnum, LoquendoTTSLibrary.ttsBoolType bReadOnly,
            Pointer<Pointer<Byte>> pKey, Pointer<Pointer<Byte>> pDesc);

    /**
     * Original signature :
     * <code>tts_API_DEFINITION ttsEnumConfigurationParameterNext(ttsHandleType, const char**, const char**)</code><br>
     * <i>native declaration : line 590</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsEnumConfigurationParameterNext(
            LoquendoTTSLibrary.ttsHandleType hEnum, Pointer<Pointer<Byte>> pKey, Pointer<Pointer<Byte>> pDesc);

    /**
     * Original signature : <code>tts_API_DEFINITION ttsIsMp3SupportInstalled(ttsInfoStringType)</code><br>
     * <i>native declaration : line 596</i>
     */
    public static native LoquendoTTSLibrary.tts_API_DEFINITION ttsIsMp3SupportInstalled(
            LoquendoTTSLibrary.ttsInfoStringType libName);

    /** Undefined type */
    public static interface ttsInfoStringType {

    };

    /** Undefined type */
    public static interface ttsCallbackType {

    };

    /** Undefined type */
    public static interface ttsGraphicEQBandType {

    };

    /** Undefined type */
    public static interface ttsGraphicEQPresetType {

    };

    /** Undefined type */
    public static interface tts_API_DEFINITION {

    };

    /** Undefined type */
    public static interface ttsTextEncodingType {

    };

    /** Undefined type */
    public static interface ttsURLCallbackType {

    };

    /** Undefined type */
    public static interface ttsSkipType {

    };

    /** Undefined type */
    public static interface ttsTextFormatType {

    };

    /** Undefined type */
    public static interface ttsEventType {

    };

    /** Undefined type */
    public static interface ttsAudioEncodingType {

    };

    /** Undefined type */
    public static interface ttsQueryType {

    };

    /** Undefined type */
    public static interface ttsHandleType {

    };

    /** Undefined type */
    public static interface tts_API_DEFINITION_P {

    };

    /** Undefined type */
    public static interface ttsAudioSampleType {

    };

    /** Undefined type */
    public static interface ttsBoolType {

    };

    /** Undefined type */
    public static interface ttsResultType {

    };
}
